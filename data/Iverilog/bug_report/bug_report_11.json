{
    "URL": "https://github.com/steveicarus/iverilog/issues/661",
    "Summary": "urandom_range unable to support 32-bit range",
    "Description": "It seems the current implementation of urandom_range is restricted to less than a 32-bit integer range.\nWhile trying to use SystemVerilog functions urandom_range I hit an issue while trying to generate stimulus for a testbench.\nHere is a small code that reproduces the issue unrandom_bug.v:\nmodule urandom_bug;\n\nreg [32:0] something;\n\ninitial begin\n\trepeat(100) begin\n`ifdef MAX_32_RANGE\n\t\tsomething = $urandom_range(32'hffff_ffff, 32'h0);\n`else\n\t\tsomething = $urandom_range(32'hfff_ffff, 32'h0);\n`endif\n\t\t$display(\"%h\", something);\n\t\t#10;\n\tend\nend\n\nendmodule\nScenario 1\nWhen trying with the urandom_range with maxval set to ((2^32) - 1) I get only zeros as values.\nBuild Command\niverilog -g2012 -DMAX_32_RANGE urandom_bug.v -o urandom_bug_max.out\nOutput:\n$ ./urandom_bug_max.out \n000000000\n000000000\n.....\nScenario 2\nBuild Command\niverilog -g2012 urandom_bug.v -o urandom_bug_limit.out\nOutput\n$ ./urandom_bug_limit.out \n009215352\n0040895e8\n000484d60\n0031f0566\n0086b97b0\n.....\nAny value to maxval >= ((2^31) to urandom_range  triggers the same behavior as in Scenario 1."
}