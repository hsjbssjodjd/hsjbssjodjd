{
    "URL": "https://github.com/steveicarus/iverilog/issues/540",
    "Summary": "inaccurate combination if signedness of non-ANSI style port declarations",
    "Description": "Per 23.2.2.1 of IEEE 1800-2017:\n\nThe signed attribute can be attached either to a port declaration or the corresponding net or variable declaration or to both. If either the port or the net/variable is declared as signed, then the other shall also be considered signed.\n\nContrary to this specification, iverilog appears to only consider the signedness of the data declaration, rather considering the port signed if either declaration marks it as such.\nmodule top(\n    o___one, o___two,\n    o__signed_one, o__signed_two,\n    o__unsigned_one, o__unsigned_two,\n    o_signed__one, o_signed__two,\n    o_signed_signed_one, o_signed_signed_two,\n    o_signed_unsigned_one, o_signed_unsigned_two,\n    o_unsigned__one, o_unsigned__two,\n    o_unsigned_signed_one, o_unsigned_signed_two,\n    o_unsigned_unsigned_one, o_unsigned_unsigned_two\n);\n\n`define TEST_RAW(name, port, data) \\\n    output port name; \\\n    wire data name; \\\n    assign name = 1'sb1; \\\n    wire [$bits(name):0] tmp_``name = name; \\\n    initial #1 $display(`\"name %b %b`\", name, tmp_``name);\n\n`define TEST_SG(port_sg, data_sg) \\\n    `TEST_RAW(o_``port_sg``_``data_sg``_one, port_sg      , data_sg      ) \\\n    `TEST_RAW(o_``port_sg``_``data_sg``_two, port_sg [1:0], data_sg [1:0]) \\\n\n    `TEST_SG(        ,         )\n    `TEST_SG(        ,   signed)\n    `TEST_SG(        , unsigned)\n    `TEST_SG(  signed,         )\n    `TEST_SG(  signed,   signed)\n    `TEST_SG(  signed, unsigned)\n    `TEST_SG(unsigned,         )\n    `TEST_SG(unsigned,   signed)\n    `TEST_SG(unsigned, unsigned)\nendmodule"
}