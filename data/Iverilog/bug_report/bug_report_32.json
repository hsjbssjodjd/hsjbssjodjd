{
    "URL": "https://github.com/steveicarus/iverilog/issues/411",
    "Summary": "SV:  a function body consisting of a single null statement causes a compiler assertion failure",
    "Description": "Hi,\nAs I started extracting a smaller test from IVL_UVM crash reported earlier, below is a smaller test and shows an error as:\niverilog -DVW_IVLOG_GO2UVM -DIVL_UVM -g2012 -I../ -o vw_ivl_go2uvm.vvp ../ivl_uvm_msg.svh\n\n ../ivl_uvm_msg.svh:79: assert: elaborate.cc:5299: failed assertion statement_\n\nCode below.\nThanks\nSrini\n`define uvm_info(ID, MSG, VERBOSITY) \n \n `define g2u_display(MSG) \\\n   begin \\\n     $display (MSG); \\\n   end\n\npackage test_pkg;\n\n  int uvm_info_counter;\n  int uvm_warn_counter;\n  int uvm_err_counter;\n  int uvm_fatal_counter;\n\n  function void uvm_count_info();\n    uvm_info_counter++;\n  endfunction : uvm_count_info\n\n  /*\n\n  function void uvm_count_info();\n    uvm_info_counter++;\n  endfunction : uvm_count_info\n  */\n\n  function void uvm_count_warn();\n    uvm_warn_counter++;\n  endfunction : uvm_count_warn\n\n  function void uvm_count_err();\n    uvm_err_counter++;\n  endfunction : uvm_count_err\n\n  function void uvm_count_fatal();\n    uvm_fatal_counter++;\n  endfunction : uvm_count_fatal\n\n\n  function void report_summarize ();\n    int num_errs;\n\n    $display(\"\");\n    $display(\"--- UVM Report Summary ---\");\n    $display(\"\");\n    $display(\"** Report counts by severity\");\n    $display (\"UVM_INFO : %0d\", uvm_info_counter);\n    $display (\"UVM_WARNING : %0d\", uvm_warn_counter);\n    $display (\"UVM_ERROR : %0d\", uvm_err_counter);\n    $display (\"UVM_FATAL : %0d\", uvm_fatal_counter);\n\n    num_errs = uvm_err_counter;\n\n    if(num_errs > 0) begin : fail\n      $display ( \"%c[1;31m\",27 ) ; // RED color\n      $display (\"Test FAILED with %0d error(s), look for UVM_ERROR in log file\",\n                 num_errs);\n      $display ( \"%c[0m\",27 ) ;\n    end : fail\n    else begin : pass\n      $display ( \"%c[5;34m\",27 ) ; // BLUE color\n      $display ( \"*** Congratulations! Test PASSED with NO UVM_ERRORs ***\" ) ;\n      $display ( \"%c[0m\",27 ) ;\n    end : pass\n\n  endfunction : report_summarize\n\n\nvirtual class uvm_void;\n  function new ();\n  endfunction : new \nendclass : uvm_void\n\nclass uvm_object extends uvm_void;\n  function new ();\n    super.new ();\n  endfunction : new \n\n  virtual function void print ();\n    `uvm_info (log_id, \"Print\", UVM_MEDIUM);\n  endfunction : print \n\nendclass : uvm_object\n\nclass uvm_report_object extends uvm_object;\n  function new ();\n    super.new ();\n  endfunction : new \n\nendclass : uvm_report_object \n\nclass uvm_phase extends uvm_object;\n  function new ();\n    super.new ();\n  endfunction : new \n\nendclass : uvm_phase \n\nvirtual class uvm_component extends uvm_report_object;\n  function new ();\n    super.new ();\n  endfunction : new \n\n\n  virtual function void build_phase(uvm_phase phase);\n    `g2u_display (\"build_phase\")\n  endfunction : build_phase\n\n  virtual function void connect_phase(uvm_phase phase);\n    `g2u_display (\"connect_phase\")\n  endfunction : connect_phase\n\n  virtual function void end_of_elaboration_phase(uvm_phase phase);\n    `g2u_display (\"end_of_elaboration_phase\")\n  endfunction : end_of_elaboration_phase\n  virtual function void start_of_simulation_phase(uvm_phase phase);\n    `g2u_display (\"start_of_simulation_phase\")\n  endfunction : start_of_simulation_phase\n\n  //virtual task run_phase (uvm_phase phase);\n  virtual task run_phase ();\n    `g2u_display (\"run_phase\")\n    this.print ();\n  endtask : run_phase \n\n  virtual function void extract_phase(uvm_phase phase);\n  endfunction : extract_phase\n  virtual function void check_phase(uvm_phase phase);\n  endfunction : check_phase\n  virtual function void report_phase(uvm_phase phase);\n  endfunction : report_phase\n  virtual function void final_phase(uvm_phase phase);\n  endfunction : final_phase\n\n  virtual task ivl_uvm_run_all_phases ();\n    uvm_phase u_ph_0;\n\n    u_ph_0 = new();\n    this.build_phase (u_ph_0);\n    this.connect_phase (u_ph_0);\n    this.end_of_elaboration_phase (u_ph_0);\n    this.start_of_simulation_phase (u_ph_0);\n    this.run_phase ();\n    this.extract_phase (u_ph_0);\n    this.check_phase (u_ph_0);\n    this.report_phase (u_ph_0);\n    this.final_phase (u_ph_0);\n  endtask : ivl_uvm_run_all_phases \n\nendclass : uvm_component\n\nendpackage : test_pkg\n\nmodule m;\n\n  import test_pkg::*;\n\nendmodule : m"
}