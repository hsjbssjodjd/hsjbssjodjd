{
    "URL": "https://github.com/steveicarus/iverilog/issues/289",
    "Summary": "enum in struct is counted as 0 bits when struct is used in packed union.",
    "Description": "I started working in a larger systemverilog codebase and wanted to simulate it using iverilog. But I was getting an error during elaboration. I was able to track it down to the following minimal example:\npackage pkg;\n\ntypedef enum logic [3:0] { \n    ABC = 4'h0\n} enum_t;\n\ntypedef struct packed {\n    enum_t item;\n} w_enum;\n\ntypedef struct packed {\n    logic [3:0] item;\n} w_logic;\n\ntypedef union packed {\n    w_enum el1;\n    w_logic el2;\n} foo_t;\n\nendpackage\n\nimport pkg::*;\n\nmodule main();\nfoo_t val;\nendmodule\nCompiling this with iverilog -v -g2012 main.sv gives me the following error message (I stripped the copyright notice):\nIcarus Verilog version 11.0 (devel) (s20150603-774-g7f95abc6)\n\ntranslate: /usr/lib/ivl/ivlpp  -v -L -F\"/tmp/ivrlg24dc6567c\" -f\"/tmp/ivrlg4dc6567c\" -p\"/tmp/ivrli4dc6567c\" | /usr/lib/ivl/ivl -v -C\"/tmp/ivrlh4dc6567c\" -C\"/usr/lib/ivl/vvp.conf\" -- -\nIcarus Verilog Preprocessor version 11.0 (devel) (s20150603-774-g7f95abc6)\n\nUsing language generation: IEEE1800-2012,no-specify,xtypes,icarus-misc\nPARSING INPUT\nLOCATING TOP-LEVEL MODULES\n   main\n ... done, 0 seconds.\nELABORATING DESIGN\n:0: error: Member el2 of packed union is 4 bits, expecting 0 bits.\n1 error(s) during elaboration.\n\nI am not too advanced in Systemverilog but from reading the standard and looking at other examples it seems to me the above code should be correct.\nOne curious thing I noticed it when you take all the struct, enum and union declarations out of the pkg package, the error no longer occurs.\nI wasn't able to trim down the code any further, for example directly using the enum and logic vector in the foo_t union no longer produces the error:\ntypedef union packed {\n    enum_t el1;\n    logic [3:0] el2;\n} foo_t;\nIf you need any more information let me know.\nI am using the latest commit of iverilog (7f95abc)"
}