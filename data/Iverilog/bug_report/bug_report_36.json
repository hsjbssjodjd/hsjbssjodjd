{
    "URL": "https://github.com/steveicarus/iverilog/issues/315",
    "Summary": "specify section params ignored where conditionals are present",
    "Description": "I am finding that under certain conditions the specify timings are not respected.\nThis appears to the be the case if a continuous assignment contains a conditional.\nIn my case ternary operators cause the timings to be ignored.\nI use the current source code build using options .. \"-Wall -g2012 -gspecify -Ttyp\"\nThis demo illustrates the issue ..  https://www.edaplayground.com/x/hDa\nCode is below.\nCross posted here : https://stackoverflow.com/questions/60938727/icarus-verilog-specify-delays-not-respected-if-there-are-conditionals\nA response there is that this issue doesn't happen on two other simulators that were tried.\nSo the suggestion is that it's a bug in icarus.\n=====\n`timescale 1ns/1ns\n\nmodule hct74245(\n  input dir,\n  input nOE,\n  inout [7:0] A,\n  inout [7:0] B,\n  output [7:0] C // Added to demonstrate that a straight dependency timing works correctly\n);\n\n  // HCT typical @ 5v according to https://assets.nexperia.com/documents/data-sheet/74HC_HCT245.pdf\n\n  specify\n    (A *> C) = 100; // This delay works OK\n    (A *> B) = 10;  // The rest of these delays do not work\n    (B *> A) = 10; // not respected\n    (dir *> A) = 16;// not respected\n    (dir *> B) = 16;// not respected\n    (nOE *> A) = 16;// not respected\n    (nOE *> B) = 16;// not respected\n  endspecify\n\n  assign A=nOE? 8'bzzzzzzzz : dir?8'bzzzzzzzz:B;\n  assign B=nOE? 8'bzzzzzzzz : dir?A:8'bzzzzzzzz;\n  assign C=A; // THIS IS DELAYED BY 100\n\n  // HAVE TO USE THIS APPROACH TO MAKE TIMINGS WORK AT ALL\n  // assign #16 A=nOE? 8'bzzzzzzzz :dir?8'bzzzzzzzz:B;\n  // assign #16 B=nOE? 8'bzzzzzzzz :dir?A: 8'bzzzzzzzz;\n\nendmodule: hct74245\n\nTest harness which prints ERROR where the timings are not respected.\n/* BUG? Known limitation??\n\nApart from the A->C timing which is direct (no conditionals) the specify timings are no respected.\nI have to add a inline delay to get anything.\n\nIt seems that specify delays are ignored where there's a conditional. \n*/\n\n`timescale 1ns/1ns\n\nmodule tb();\n\n  tri [7:0]A;\n  tri [7:0]B;\n\n  tri [7:0]C; // 'C' IS NOT PART OF ORIGINAL DESIGN - HOWEVER THIS TIMING IS RESPECTED COS THERE ARE NO CONDITIONALS IN THE ASSIGNMENT\n\n  logic [7:0] Vb=8'b00000000;\n  logic [7:0] Va=8'b11111111;\n\n  logic dir;\n  logic nOE;\n\n  assign B=Vb;\n  assign A=Va;\n\n  hct74245 buf245(.A, .B, .dir, .nOE);\n\n  integer timer;\n\n  initial begin\n    $display(\"disable output , set dir a->b\");\n    dir <= 1; // A->B\n    nOE <= 1;\n    Va=8'b11111111;\n    Vb=8'bzzzzzzzz;\n\n    #50 // time to settle\n\n    // NOW throw outputs on and time how long it takes for expected output to appear.\n    \n    // It should take 16 to propagate from nOE -> B but the change is instantaneous\n\n    $display(\"enable output - B will change immediately\");\n\n    timer=$time;\n    nOE <= 0;\n    wait(B === 8'b11111111);\n    if ($time - timer < 16)\n      $display(\"%6d\", $time, \" ERROR TOO QUICK - EXPECTED nOE->B = 16ns - BUT TOOK %-d\", ($time - timer));\n    else\n      $display(\"%6d\", $time, \" OK %-d\", ($time - timer));\n\n\n    #50 // settle\n\n    // Change data in - This should take 10 to propagate A->B but is instantaneous\n    $display(\"change A - B will change immediately (but C is delayed as expected by 100)\");\n\n    Va=8'b00000000;\n\n    timer=$time;\n    nOE <= 0;\n    wait(B === 8'b00000000);\n    if ($time - timer < 10)\n      $display(\"%6d\", $time, \" ERROR TOO QUICK - EXPECTED A->B = 10ns - BUT TOOK %-d\", ($time - timer));\n    else\n      $display(\"%6d\", $time, \" OK - TOOK %-d\", ($time - timer));\n\n  end\nendmodule\n\nResult when run ...\ndisable output , set dir a->b\nenable output - B will change immediately\n    50 ERROR TOO QUICK - EXPECTED nOE->B = 16ns - BUT TOOK 0                   \nchange A - B will change immediately (but C is delayed as expected by 100)\n   100 ERROR TOO QUICK - EXPECTED A->B = 10ns - BUT TOOK 0"
}