{
    "URL": "https://github.com/steveicarus/iverilog/issues/672",
    "Summary": "\"fork\" blocks re-triggering of always block",
    "Description": "In this module a new process should be started on every posedge:\nmodule top;\n\n    logic clk = 0;\n    int cnt = 0;\n\n    always @(posedge clk) begin\n        fork begin\n            #(10*2); // Wait 10 clock periods\n            $display(\"End of this process\");\n            cnt++;\n        end\n        join_none\n    end\n\n    initial begin\n        $display(\"Starting test!\");\n        #(100*2); // Wait 100 clock periods\n        $display(\"cnt = %d\", cnt);\n        $finish;\n    end\n    \n    always begin\n        #1 clk = ~clk;\n    end\n\nendmodule\n\nThe output is the following:\niverilog -o test -s top -g2012 test.sv\nvvp test\nStarting test!\nEnd of this process\nEnd of this process\nEnd of this process\nEnd of this process\nEnd of this process\nEnd of this process\nEnd of this process\nEnd of this process\nEnd of this process\ncnt =           9\niverilog_test.sv:18: $finish called at 200 (1s)\n\nThe value of cnt at the end of execution is 9 instead of the expected 90. This means when the always block was triggered it was only possible to trigger it again when the process inside fork has finished.\nRunning the same example on Xcelium xrun 20.09 returns the value 90 for cnt."
}