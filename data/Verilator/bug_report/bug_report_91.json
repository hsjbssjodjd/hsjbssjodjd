{
    "URL": "https://github.com/verilator/verilator/issues/2475",
    "Summary": "Interface arrays always connect to ports in high:low order",
    "Description": "When an interface array port on a module is declared with low:high ordering or declared by size (which is also low:high) and connected to an interface array that is high:low ordering in a parent module, the interface array within the child module is ordered with high:low ordering, rather than having the array elements reversed. I believe they should be reversed per my understanding of the language. Additionally, Vivado treats the connections as reversed in order, which is where I noticed the simulation-synthesis mismatch.\ninterface intf ();\n    integer index;\nendinterface\n\nmodule subm (\n    intf y[0:2] //low to high\n);\n\nendmodule\nmodule t()\n    intf test_intf[2:0](); //high downto low\n    subm subm_inst (\n    //here, a 2:0 signal (test_intf) is connected to a 0:2 port (y),\n    //so the connections should end up reversed in ordering,\n    //but I observed that within subm, they are connected 0->0, 1->1, 2->2\n        .y(test_intf)\n    );\nendmodule\nUsing verilator git master as of today (edf6a40).\nSee attached test in test_regress format. t_interface_array_ordering.zip"
}