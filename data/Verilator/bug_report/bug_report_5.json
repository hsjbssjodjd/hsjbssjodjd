{
    "URL": "https://github.com/verilator/verilator/issues/4438",
    "Summary": "incorrect \"Multiple top level modules\" error on bind",
    "Description": "VCS (https://www.edaplayground.com) compiles and runs.\nVerilator errors out:\ntest_regress/t/t_interface_bind_public.pl\n======================================================================\ndist/t_interface_bind_public: ==================================================\n-Skip: dist/t_interface_bind_public: scenario 'dist' not enabled for test\ndist/t_interface_bind_public: -Skip: Skip: scenario 'dist' not enabled for test\n==SUMMARY: Passed 0  Failed 0  Time 0:00\n======================================================================\nvlt/t_interface_bind_public: ==================================================\n\tperl /home/sols/work/verilator/test_regress/../bin/verilator --prefix Vt_interface_bind_public ../obj_vlt/t_interface_bind_public/Vt_interface_bind_public__main.cpp --exe --make gmake --x-assign unique -cc -Mdir obj_vlt/t_interface_bind_public --fdedup --debug-check --comp-limit-members 10 -public --clk clk  -f input.vc +define+TEST_OBJ_DIR=obj_vlt/t_interface_bind_public +define+TEST_DUMPFILE=obj_vlt/t_interface_bind_public/simx.vcd t/t_interface_bind_public.v    > obj_vlt/t_interface_bind_public/vlt_compile.log\n%Warning-MULTITOP: t/t_interface_bind_public.v:113:6: Multiple top level modules\n                                                    : ... Suggest see manual; fix the duplicates, or use --top-module to select top.\n                   ... For warning description see https://verilator.org/warn/MULTITOP?v=5.015\n                   ... Use \"/* verilator lint_off MULTITOP */\" and lint_on around source to disable this message.\n                                                    : ... Top module 't'\n   31 | module t\n      |        ^\n                                                    : ... Top module 's_inst'\n  113 | bind s_inst  hex2ram_if i_hex2ram (.trigger(!reset));\n      |      ^~~~~~\n%Warning-IMPLICIT: t/t_interface_bind_public.v:113:46: Signal definition not found, creating implicitly: 'reset'\n  113 | bind s_inst  hex2ram_if i_hex2ram (.trigger(!reset));\n      |                                              ^~~~~\n%Error: Exiting due to 2 warning(s)\n%Warning: vlt/t_interface_bind_public: Exec of perl failed: %Warning-MULTITOP: t/t_interface_bind_public.v:113:6: Multiple top level modules\n\nvlt/t_interface_bind_public: %Error: Exec of perl failed: %Warning-MULTITOP: t/t_interface_bind_public.v:113:6: Multiple top level modules\nvlt/t_interface_bind_public: FAILED: Exec of perl failed: %Warning-MULTITOP: t/t_interface_bind_public.v:113:6: Multiple top level modules\n==SUMMARY: Passed 0  Failed 1  Time 0:00\n==SUMMARY: Passed 0  Failed 1  Time 0:00\n\n======================================================================\n\t#vlt/t_interface_bind_public: %Error: Exec of perl failed: %Warning-MULTITOP: t/t_interface_bind_public.v:113:6: Multiple top level modules\n\t\tmake && test_regress/t/t_interface_bind_public.pl  --vlt\nTESTS DONE, FAILED: Passed 0  Failed 1  Time 0:00\n\nCan you attach an example that shows the issue?  (Must be openly licensed, ideally in test_regress format.)\ninterface hex2ram_if\n  (\n   input bit trigger\n   );\n\n   string    instance_path  = $sformatf(\"%m\");\n   string    testfile       = \"\";\n   bit       has_testfile   = |($value$plusargs(\"testfile=%s\", testfile));\n   bit       armed          = 1'b1;\n   bit       armed_trigger;\n\n   initial begin\n      $display(\"successfully bound hex2ram_if to %s\", instance_path);\n//      armed = has_testfile && 1'b1;\n   end\n\n   assign armed_trigger = armed && trigger;\n\n   always @(posedge armed_trigger) begin\n      $display(\"%m(%0t): saw deassertion of reset\", $time);\n   end\n\nendinterface : hex2ram_if\n\nmodule t\n  (\n   clk\n   );\n\n   input clk /*verilator clocker*/;\n   bit reset;\n\n   wire      success;\n   SimpleTestHarness testHarness\n     (\n      .clk(clk),\n      .reset(reset),\n      .io_success(success)\n      );\n\n   integer   cyc = 0;\n\n   always @ (posedge clk) begin\n      cyc = cyc + 1;\n      if (cyc<10) begin\n         reset <= '0;\n      end\n      else if (cyc<20) begin\n         reset <= '1;\n      end\n      else if (cyc<30) begin\n         reset <= '0;\n      end\n      else if (cyc==99) begin\n         $write(\"*-* All Finished *-*\\n\");\n         $finish;\n      end\n   end\n\nendmodule\n\n//bind testharness_ext  hex2ram_if i_hex2ram (.trigger(!s_inst.reset));\n\nmodule s\n  (\n   reset\n   );\n\n   input reset;\nendmodule\n\nmodule testharness_ext\n  (\n   input          W0_clk,\n   input          reset,\n   input [24:0]   W0_addr,\n   input          W0_en,\n   input [127:0]  W0_data,\n   input [0:0]    W0_mask,\n   input          R0_clk,\n   input [24:0]   R0_addr,\n   input          R0_en,\n   output [127:0] R0_data\n   );\n\n   reg [24:0]     reg_R0_addr;\n   wire [127:0]   R0_rdata_mask;\n   reg [127:0]    ram [33554431:0];\n   wire [127:0]   W0_wdata_mask;\n\n   s s_inst\n     (\n      .reset(reset)\n      );\n\n   always @(posedge R0_clk)\n     if (R0_en) reg_R0_addr <= R0_addr;\n\n   always @(posedge W0_clk)\n     if (W0_en) begin\n        if (W0_mask[0]) ram[W0_addr] <= W0_data ^ W0_wdata_mask;\n     end\n   assign R0_data = ram[reg_R0_addr] ^ R0_rdata_mask;;\n   assign R0_rdata_mask = 0;\n   assign W0_wdata_mask = 0;\n\nbind s_inst  hex2ram_if i_hex2ram (.trigger(!reset));\nendmodule\n\nmodule SimpleTestHarness\n  (\n   input  clk,\n   input  reset,\n   output io_success);\n\n   wire [24:0] testharness_ext_R0_addr;\n   wire        testharness_ext_R0_en;\n   wire        testharness_ext_R0_clk;\n   wire [127:0] testharness_ext_R0_data;\n   wire [24:0]  testharness_ext_W0_addr;\n   wire         testharness_ext_W0_en;\n   wire         testharness_ext_W0_clk;\n   wire [127:0] testharness_ext_W0_data;\n   wire [0:0]  testharness_ext_W0_mask;\n\n   testharness_ext testharness_ext\n     (\n      .reset(reset),\n      .R0_addr(testharness_ext_R0_addr),\n      .R0_en(testharness_ext_R0_en),\n      .R0_clk(testharness_ext_R0_clk),\n      .R0_data(testharness_ext_R0_data),\n      .W0_addr(testharness_ext_W0_addr),\n      .W0_en(testharness_ext_W0_en),\n      .W0_clk(testharness_ext_W0_clk),\n      .W0_data(testharness_ext_W0_data),\n      .W0_mask(testharness_ext_W0_mask)\n      );\n\nendmodule\n\nWhat 'verilator --version' are you using?  Did you try it with the git master version?\nVerilator 5.015 devel rev v5.014-25-ge8e791287\n\nWhat OS and distribution are you using?\nLinux loran 4.18.0-500.el8.x86_64 #1 SMP Wed Jun 28 00:07:07 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\n\nMay we assist you in trying to fix this in Verilator yourself?\nMaybe"
}