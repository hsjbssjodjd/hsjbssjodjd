{
    "URL": "https://github.com/verilator/verilator/issues/3055",
    "Summary": "'parameter type' data type bit width changes unexpectedly",
    "Description": "Not sure how to describe this issue shortly, so here is the long story:\n\nCan you attach an example that shows the issue?  (Must be openly licensed, ideally in test_regress format.)\n\nThe bug occurred while messing around with cva6. As this is a rather large code base, I extracted only the relevant files and created a small repo.\nTo reproduce the bug simply run make && ./sim_build/top/Vtop -t test.vcd. Then, open the created test.vcd with gtkwave and load the save file gtkwaveSignals.gtkw.\nWith a working verilator version it should look something like this:\n\nNote that all aux signals have a width of 68, also the testbench prints out: rdata_o: 0xdeadbeeff457f00e.\nIn contrast to that on newer verilator versions it looks like this:\n\nNow some aux signals still have the expected width of 68 while others have a width of 98 (also the bit width for id changes).\nAlso, the testbench prints out: rdata_o: 0x6f56df77f.\nThe aux signal is packed in a struct which is defined in axi_node_arbiter.sv as axi_meta_t and passed to the instance i_arb_inp of the module stream_arbiter.sv as parameter type DATA_T. This type is also passed to its submodule i_arb of stream_arbiter_flushable.sv where things start to go wrong and the datatype width changes unexpectedly.\n\nWhat 'verilator --version' are you using?  Did you try it with the git master version?\n\nWell I have tried severals (git bisect). Initially I have started with the v4.014 tag as good/working commit and at the time of writing the latest master commit (708abe0) as bad commit.\nThe result of my bisect attempt is as follows:\n\nLast good commit: fd35492\nFirst bad commit: 8814111\n\n\nWould you be willing to try to fix Verilator yourself with assistance?\n\nNot sure if I am capable in doing so, but I am willing to assist/help where I can."
}