{
    "URL": "https://github.com/verilator/verilator/issues/4173",
    "Summary": "Nested array of unpacked struct causing segfault",
    "Description": "Thanks for taking the time to report this.\nCan you attach an example that shows the issue?  (Must be openly licensed, ideally in test_regress format.)\nmodule test2;\n    typedef struct {\n        struct {\n            struct {\n                logic [31:0] next;\n            } val;\n        } el[1];\n    } field_combo_t;\n    field_combo_t field_combo;\nendmodule\n\n/tools/work/verilator_compile/5.10/bin/verilator_bin --build --cc ../test2.sv\nSegmentation fault (core dumped)\n\nWhat 'verilator --version' are you using?  Did you try it with the git master version?\nVerilator 5.011 devel rev v5.010-25-g76f5de6e5\nBut I tried also 5.006 tag\nMay we assist you in trying to fix this in Verilator yourself?\nYes I can give it a try if I get some directions.\nRunning this with --structs-packed solves the segmentation fault, but then I have different error in different part of design.\ntypedef struct {\n    logic [31:0] value;\n} base_struct;\n\ntypedef struct {\n    base_struct el[1];\n} top_struct;\n\nmodule test ;\n    top_struct fails;\n    assign fails.el[0].value = 32'd1;\nendmodule\n\n%Error: Internal Error: ../test.sv:10:16: ../V3Dfg.h:537: DfgVertex is not of expected type, but instead has type 'VARPACKED'\n   10 |     top_struct fails;\n\nWhich is I guess ok, as this doesnt also work on other simulators if these two are packed"
}