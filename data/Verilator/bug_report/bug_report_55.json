{
    "URL": "https://github.com/verilator/verilator/issues/4557",
    "Summary": "Issue using packed struct with instance array",
    "Description": "When instanciating an array of modules with packed array output, connecting unpacked array of packed struct to modules output gives the following error when trying to verilate:\n%Error: C:/Users/raph/testbenches/systemverilog/verilator_issue/tb.sv:21:20: VARREF 'tb.__Vcellout__dut1[1]____pinNumber2' is not an unpacked array, but is in an unpacked array context\n   21 |  dut dut1 [2] (in, out);\n      |                    ^~~\n%Error: C:/Users/raph/testbenches/systemverilog/verilator_issue/tb.sv:21:20: VARREF 'tb.__Vcellout__dut1[0]____pinNumber2' is not an unpacked array, but is in an unpacked array context\n   21 |  dut dut1 [2] (in, out);\n      |                    ^~~\n%Error: Exiting due to 4 error(s)\n\nHere is the simple testbench I used:\nmodule dut\n\t(input bit [1:0] in,\n\toutput bit [1:0] out);\n\n\tassign out = in;\nendmodule\n\nmodule tb;\n\tbit clock = 0, finish = 0;\n\t\n\talways #1 clock = ~clock;\n\t\n\ttypedef struct packed {\n\t\tbit one;\n\t\tbit two;\n\t\t} ps;\n\t\n\tps in [2] = {{1'b1, 1'b0}, {1'b0, 1'b1}};\n\tps out [2];\n\t\n\tdut dut1 [2] (in, out);\n\t\n\ttask error ();\n\t\t$fatal(2, \"\\ninvalid out for in\\nout[0]: %0h | in[0]: %0h | out[1]: %0h | in[1]: %0h\", out[0], in[0], out[1], in[1]);\n\tendtask\n\t\n\tint unsigned step = 0;\n\talways @(clock) begin\n\t\tif (!finish) begin\n\t\t\tif (step == 0) begin\n\t\t\t\tif (out[0] != 2'h2 || out[1] != 2'h1) error();\n\t\t\tend\n\t\t\tif (step == 0) finish = 1;\n\t\t\telse step++;\n\t\tend\n\tend\n\t\n\talways @(clock) begin\n\t\tif (finish) begin\n\t\t\t$display(\"tb success\");\n\t\t\t$finish;\n\t\tend\n\tend\nendmodule\n\nI also tried changing the packed struct type to a packed array like this: bit [1:0] out [2];\nIt verilates without errors, but it throws errors at compilation time: cannot convert from 'VlUnpacked<CData,2>' to 'T_Value'\nTested on edaplayground.com with Aldec, Inc. Riviera-PRO version 2022.04.117.8517 and testbench finish without errors.\nIssue may be related to issue #798.\nI am using Verilator 5.014 built from sources on WIndows using MSVC."
}