{
    "URL": "https://github.com/verilator/verilator/issues/2828",
    "Summary": "Bits OR not working correctly since v4.110",
    "Description": "Can you attach an example that shows the issue?  (Must be openly licensed, ideally in test_regress format.)\nbit-reduce-or.tar.gz\nCommand line arguments: verilator --cc *.v --top-module MissQueue\nHere is the simpler version:\nIn MissQueue.v, we use fwrite to output _T_1054 and _T_1215 in binary and decimal format respectively (search for earlyValids=).\n_T_1054 is a bit concatenation and _T_1215 is a bit reduce-OR.\n1865   wire  _WIRE_36_earlyValid = entries_0_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1866   wire  _WIRE_37_earlyValid = entries_1_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1867   wire  _WIRE_38_earlyValid = entries_2_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1868   wire  _WIRE_39_earlyValid = entries_3_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1869   wire  _WIRE_40_earlyValid = entries_4_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1870   wire  _WIRE_41_earlyValid = entries_5_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1871   wire  _WIRE_42_earlyValid = entries_6_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1872   wire  _WIRE_43_earlyValid = entries_7_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1873   wire  _WIRE_44_earlyValid = entries_8_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1874   wire  _WIRE_45_earlyValid = entries_9_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1875   wire  _WIRE_46_earlyValid = entries_10_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1876   wire  _WIRE_47_earlyValid = entries_11_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1877   wire  _WIRE_48_earlyValid = entries_12_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1878   wire  _WIRE_49_earlyValid = entries_13_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1879   wire  _WIRE_50_earlyValid = entries_14_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n1880   wire  _WIRE_51_earlyValid = entries_15_io_mem_finish_valid; // @[ReadyValidCancel.scala 71:19 ReadyValidCancel.scala 72:20]\n\n1881   wire [7:0] lo_4 = {_WIRE_43_earlyValid,_WIRE_42_earlyValid,_WIRE_41_earlyValid,_WIRE_40_earlyValid,_WIRE_39_earlyValid\n1882     ,_WIRE_38_earlyValid,_WIRE_37_earlyValid,_WIRE_36_earlyValid}; // @[Cat.scala 30:58]\n1883   wire [15:0] _T_1054 = {_WIRE_51_earlyValid,_WIRE_50_earlyValid,_WIRE_49_earlyValid,_WIRE_48_earlyValid,\n1884     _WIRE_47_earlyValid,_WIRE_46_earlyValid,_WIRE_45_earlyValid,_WIRE_44_earlyValid,lo_4}; // @[Cat.scala 30:58]\n\n1937   wire  _T_1215 = _WIRE_36_earlyValid | _WIRE_37_earlyValid | _WIRE_38_earlyValid | _WIRE_39_earlyValid |\n1938     _WIRE_40_earlyValid | _WIRE_41_earlyValid | _WIRE_42_earlyValid | _WIRE_43_earlyValid | _WIRE_44_earlyValid |\n1939     _WIRE_45_earlyValid | _WIRE_46_earlyValid | _WIRE_47_earlyValid | _WIRE_48_earlyValid | _WIRE_49_earlyValid |\n1940     _WIRE_50_earlyValid | _WIRE_51_earlyValid; // @[Arbiter.scala 107:36]\n\nIn the generated VMissQueue.cpp files, _T_1054 is correct but _T_1215 is transformed to\n    vlTOPp->MissQueue__DOT___T_1215 = (IData)((0U !=\n                                               (1U\n                                                & (IData)(vlSymsp->TOP__MissQueue__DOT__entries_0.io_mem_finish_valid))));\n\nThat is, it only tests the first operator for _T_1215.\nWhat 'verilator --version' are you using?  Did you try it with the git master version?\nVerilator 4.199 devel rev v4.110-32-g9483ebef\nv4.108 works well. But v4.110 and master version do not work as expected.\nWould you be willing to try to fix Verilator yourself with assistance?\nSorry but we are not able to locate the bug and fix it. I think the bug is caused by some commit between v4.108 and v4.110. Maybe bb5384b?"
}