{
    "URL": "https://github.com/verilator/verilator/issues/4256",
    "Summary": "C++ compile error redefinition of struct @ 4f1f487ae",
    "Description": "g++ -O0  -I.  -MMD -I.../verilator/test_regress/../include -I.../verilator/test_regress/../include/vltstd -DVM_COVERAGE=0 -DVM_SC=0 -DVM_TRACE=0 -DVM_TRACE_FST=0 -DVM_TRACE_VCD=0 -faligned-new -fcf-protection=none -Wno-bool-operation -Wno-sign-compare -Wno-uninitialized -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-variable -Wno-shadow       -DVERILATOR=1 -DVL_DEBUG=1 -DTEST_OBJ_DIR=obj_vlt/t_class_typedef -DVM_PREFIX=Vt_class_typedef -DVM_PREFIX_INCLUDE=\"<Vt_class_typedef.h>\" -DVM_PREFIX_ROOT_INCLUDE=\"<Vt_class_typedef___024root.h>\" -DT_CLASS_TYPEDEF   -c -o Vt_class_typedef__ALL.o Vt_class_typedef__ALL.cpp\nIn file included from Vt_class_typedef___024root.h:10,\n                 from Vt_class_typedef__Syms.h:17,\n                 from Vt_class_typedef.cpp:5,\n                 from Vt_class_typedef__ALL.cpp:3:\nVt_class_typedef___024unit__03a__03aB__W3__Vclpkg.h:15:8: error: redefinition of ‘struct Vt_class_typedef_t_struct__struct3’\n struct Vt_class_typedef_t_struct__struct3 {\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from Vt_class_typedef___024root.h:9,\n                 from Vt_class_typedef__Syms.h:17,\n                 from Vt_class_typedef.cpp:5,\n                 from Vt_class_typedef__ALL.cpp:3:\nVt_class_typedef___024unit__03a__03aB__Vclpkg.h:15:8: note: previous definition of ‘struct Vt_class_typedef_t_struct__struct3’\n struct Vt_class_typedef_t_struct__struct3 {\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from Vt_class_typedef__ALL.cpp:13:\nVt_class_typedef___024unit__03a__03aB__W3__Vclpkg__DepSet_hf3df3bd9__0.cpp:10:13: error: redefinition of ‘std::__cxx11::string VL_TO_STRING(const Vt_class_typedef_t_struct__struct3&)’\n std::string VL_TO_STRING(const Vt_class_typedef_t_struct__struct3& obj) {\n             ^~~~~~~~~~~~\nIn file included from Vt_class_typedef__ALL.cpp:11:\nVt_class_typedef___024unit__03a__03aB__Vclpkg__DepSet_hadfb9064__0.cpp:10:13: note: ‘std::__cxx11::string VL_TO_STRING(const Vt_class_typedef_t_struct__struct3&)’ previously defined here\n std::string VL_TO_STRING(const Vt_class_typedef_t_struct__struct3& obj) {\n             ^~~~~~~~~~~~\n\nCan you attach an example that shows the issue?  (Must be openly licensed, ideally in test_regress format.)\nclass uvm_resource_types;\n   typedef int rsrc_q_t;\nendclass\n\nclass uvm_resource_pool;\n   uvm_resource_types::rsrc_q_t rtab [string];\nendclass\n\nclass B#(parameter WIDTH = 2);\n    typedef logic [WIDTH-1:0] t_vector;\n    typedef struct {\n        t_vector m0;\n    } t_struct;\nendclass\n\nmodule t_io_class_typedef   #(parameter WIDTH = 2) (\n   // Inputs\n   input  B#(WIDTH)::t_struct in_struct,\n   // Outputs\n   output B#(WIDTH)::t_vector out_vector\n   );\n\n   assign out_vector = in_struct.m0 + 2'd1;\n\nendmodule\n\nvirtual class C#(parameter type T = logic, parameter SIZE = 1);\n    typedef logic [SIZE-1:0] t_vector;\n    typedef T t_array [SIZE-1:0];\n    typedef struct {\n        t_vector m0 [2*SIZE-1:0];\n        t_array m1;\n    } t_struct;\nendclass\n\nmodule t (/*AUTOARG*/\n   // Inputs\n   clk\n   );\n   input clk;\n\n   B#()::t_struct b_struct1;\n   B#()::t_vector b_vector1;\n\n   B#(3)::t_struct b_struct2;\n   B#(3)::t_vector b_vector2;\n\n   assign b_struct1.m0 = 2'd1;\n   assign b_struct2.m0 = 3'd2;\n\n   t_io_class_typedef i_t_io_class_typedef1(.in_struct (b_struct1),\n\t\t\t\t\t    .out_vector(b_vector1));\n\n   t_io_class_typedef #(3) i_t_io_class_typedef2 (.in_struct (b_struct2),\n\t\t\t\t\t          .out_vector(b_vector2));\n\n   initial begin\n      uvm_resource_pool pool = new;\n      typedef logic [7:0] t_t0;\n      C#(t_t0,3)::t_vector v0;\n      C#(t_t0,3)::t_array a0;\n      C#(bit,4)::t_struct s0;\n\n      pool.rtab[\"a\"] = 1;\n      if ($bits(pool.rtab[\"a\"]) != 32) $stop;\n\n      if ($bits(v0) != 3) $stop;\n      if ($size(a0) != 3) $stop;\n      if ($bits(a0[0]) != 8) $stop;\n      if ($size(s0.m0) != 8) $stop;\n      if ($size(s0.m1) != 4) $stop;\n      if ($bits(s0.m1[2]) != 1) $stop;\n      if ($bits(b_struct1.m0) != 2) $stop;\n      if ($bits(b_vector1) != 2) $stop;\n      if ($bits(b_struct2.m0) != 3) $stop;\n      if ($bits(b_vector2) != 3) $stop;\n   end\n\n   always @ (posedge clk) begin\n      if (b_vector1 != 2'd2) $stop;\n      if (b_vector2 != 3'd3) $stop;\n\n      $write(\"*-* All Finished *-*\\n\");\n      $finish;\n   end\n\nendmodule\n\nWhat 'verilator --version' are you using?  Did you try it with the git master version?\nMaster @ 4f1f487\nWhat OS and distribution are you using?\nuname -a\nLinux loran 4.18.0-492.el8.x86_64 #1 SMP Tue May 9 17:56:55 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\n\nMay we assist you in trying to fix this in Verilator yourself?\nNot sure"
}