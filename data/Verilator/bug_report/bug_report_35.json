{
    "URL": "https://github.com/verilator/verilator/issues/3781",
    "Summary": "Assignment to array does not work with intra-assignment delay",
    "Description": "Makefile.gz\ntest.sv.gz\nExample:\nmodule fifo(\n\tinput\tlogic\t\tclk,\n\tinput\tlogic\t\trstn,\n\n\tinput\tlogic\t\twr_en,\n\tinput\tlogic\t[7:0]\twdata,\n\tinput\tlogic\t\trd_en,\n\toutput\tlogic\t[7:0]\trdata,\n\n\toutput\tlogic\t\tempty,\n\toutput\tlogic\t\tfull\n);\n\n\tlogic\t[7:0]\tmem_arr\t[16];\n\tlogic\t[3:0]\trd_ptr;\n\tlogic\t[3:0]\twr_ptr;\n\tlogic\t[4:0]\tcount;\n\n\talways @(posedge clk) begin\n\t\tif (wr_en) begin\n\t\t\t$display(\"Write: %d @%d\", wdata, wr_ptr);\n\t\t\tmem_arr[wr_ptr]\t<= #0.2 wdata;\n\t\tend\n\tend\n\n\talways @(posedge clk or negedge rstn) begin\n\tif (~rstn) begin\n\t\trd_ptr\t<= 'd0;\n\t\twr_ptr\t<= 'd0;\n\t\tcount\t<= 'd0;\n\tend else begin\n\t\trd_ptr\t<= #0.2 rd_ptr + rd_en;\n\t\twr_ptr\t<= #0.2 wr_ptr + wr_en;\n\t\tcount\t<= #0.2 count + wr_en - rd_en;\n\tend\n\tend\n\n\talways_comb begin\n\t\trdata\t= mem_arr[rd_ptr];\n\t\tempty\t= (count == 0)? 1'b1: 1'b0;\n\t\tfull\t= (count == 16)? 1'b1: 1'b0;\n\tend\nendmodule\nA pretty simple FIFO design. When I try to assign to the memory array element with mem_arr[wr_ptr] <= #0.2 wdata things don't work. Nothing get's written the the memory location. However if I remove  the #0.2  delay things work exactly  as expected. A full example is attached along with the makefile and my logs.\ntest.no_delay.log.gz\ntest.with_delay.log.gz\nVerilator Version: Verilator 5.002 2022-10-29 rev UNKNOWN.REV\nOS: ArchLinux\nMay we assist you in trying to fix this in Verilator yourself? Sure..."
}