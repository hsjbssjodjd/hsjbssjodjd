{
    "URL": "https://github.com/verilator/verilator/issues/2898",
    "Summary": "V3Premit goes into infinite loop on always read-and-write",
    "Description": "verilator version：master   2021.4.16\nerror message：\nNo error information is displayed.   No cpp file is generated.\ncmd is:\nverilator_bin --sc --top-module twocounter  twocounter.v\nCode twocounter.v:\ntypedef struct packed {\n    logic [3-1:0]  car_en;\n} car_liquid_rpv_s;\ntypedef struct packed {\n    car_liquid_rpv_s   liquid_rpv;\n}car_rpv_s;\ntypedef struct packed {\n    logic  car_enable;\n    car_rpv_s   car_rpv;\n    logic [2-1:0] car_sn;\n} car_pv_s;\ntypedef struct packed{\n    car_pv_s   car_pv;\n}car_sch_ctxt_s;\nmodule twocounter (car_sch_rsp_pv_ctxt, car_action_pv_ctxt);\n    input car_sch_rsp_pv_ctxt;\n    output car_action_pv_ctxt;\n    car_sch_ctxt_s  car_sch_rsp_pv_ctxt;\n    car_sch_ctxt_s  car_action_pv_ctxt;\n    always @(*) begin\n        car_action_pv_ctxt = car_sch_rsp_pv_ctxt;\n        if (car_sch_rsp_pv_ctxt.car_pv.car_enable == 1'b1) begin\n            car_action_pv_ctxt.car_pv.car_rpv.liquid_rpv.car_en[ car_action_pv_ctxt.car_pv.car_sn] = 1'b0;    // causing problem\n        end\n    end\nendmodule\n\nThe statement causing the problem is “car_action_pv_ctxt.car_pv.car_rpv.liquid_rpv.car_en[ car_action_pv_ctxt.car_pv.car_sn] = 1'b0;”\nIf you change the code to “car_action_pv_ctxt.car_pv.car_rpv.liquid_rpv.car_en[ car_sch_rsp_pv_ctxt.car_pv.car_sn] = 1'b0;”, the problem is solved. But I think the original code is still a issue."
}